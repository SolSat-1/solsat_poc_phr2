name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install -r requirements.txt
    
    - name: Run demo analysis
      run: |
        source .venv/bin/activate
        python main_solar_analysis.py
    
    - name: Check generated files
      run: |
        ls -la files/
        test -f files/enhanced_solar_map.html
        test -f files/solar_analysis_results.json
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: solar-analysis-results-python-${{ matrix.python-version }}
        path: |
          files/*.html
          files/*.json
          files/*.txt
        retention-days: 7

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install -r requirements.txt
        uv pip install black flake8 mypy
    
    - name: Run black
      run: |
        source .venv/bin/activate
        black --check --diff *.py
    
    - name: Run flake8
      run: |
        source .venv/bin/activate
        flake8 *.py --max-line-length=100 --ignore=E203,W503
    
    - name: Run mypy
      run: |
        source .venv/bin/activate
        mypy *.py --ignore-missing-imports

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install dependencies
      run: |
        source .venv/bin/activate
        uv pip install -r requirements.txt
        uv pip install safety bandit
    
    - name: Run safety check
      run: |
        source .venv/bin/activate
        safety check
    
    - name: Run bandit security check
      run: |
        source .venv/bin/activate
        bandit -r *.py -f json -o bandit-report.json || true
    
    - name: Upload security report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: bandit-report.json
        retention-days: 30

  build:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Create virtual environment
      run: uv venv
    
    - name: Install build dependencies
      run: |
        source .venv/bin/activate
        uv pip install build twine
    
    - name: Build package
      run: |
        source .venv/bin/activate
        python -m build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: python-package
        path: dist/
        retention-days: 30
